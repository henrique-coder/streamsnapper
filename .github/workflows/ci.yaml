name: CI - Python Tests Across Multiple Environments

on:
  push:
    branches: ["main"]
    paths:
      [
        ".github/workflows/ci.yaml",
        "pyproject.toml",
        "poetry.lock",
        "tests/**",
        "streamsnapper/**",
      ]
  pull_request:
    paths:
      [
        ".github/workflows/ci.yaml",
        "pyproject.toml",
        "poetry.lock",
        "tests/**",
        "streamsnapper/**",
      ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: 🐍 Python ${{ matrix.python-version }} on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.13"] # ["3.9", "3.10", "3.11", "3.12", "3.13"]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 🐍 Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          check-latest: true

      - name: 📦 Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: 🪟 Configure Windows PATH
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          echo "⚙️ Adding Python Scripts to PATH..."
          echo "$env:APPDATA\Python\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: 💾 Cache Poetry Dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: poetry-${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-py${{ matrix.python-version }}-

      - name: 📚 Install Dependencies
        run: |
          run: poetry install --extras "all" --no-interaction -e .

      - name: 🧪 Run Tests
        run: poetry run pytest tests/all.py -v --color=yes
