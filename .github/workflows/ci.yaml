name: CI - Automated Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Run Tests
    strategy:
      fail-fast: false
      matrix:
        #os: ["ubuntu-latest", "windows-latest"]
        #python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: ["ubuntu-latest"]
        python-version: ["3.13"]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install dependencies
        run: poetry install --extras "all" --no-interaction

      - name: Run tests
        run: poetry run pytest tests/all.py
